<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>Jogo de Dados</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
              margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
        }
        
        
        
        h2 {
            color: #555;
            border-bottom: 2px solid #ccc;
            padding-bottom: 5px;
            margin-top: 25px;
        }
        h3 {
            color: #777;
            margin-top: 20px;
        }
        ul {
            list-style-type: disc;
            margin-left: 20px;
        }
        strong {
            color: #007bff;
        }
        em {
            font-style: italic;
            color: #6c757d;
        }
        p {
            margin-bottom: 15px;
        }
        
        .tela-inicial{
        position:fixed;
        top:0;
        bottom:0;
        left:0;
        right:0;
        display: flex;
    align-items: center;
    justify-content: center; /* Adicione esta linha */
    flex-direction: column;
    padding: 10px;
    padding-top: 100px;
    padding-bottom: 100px;
        background-color: #000000;
background-image: url("https://www.transparenttextures.com/patterns/black-paper.png");
        }
        
        .jogo{
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            position:fixed;
            margin: 0;
            top:0;
            bottom:0;
            overflow: hidden;
            left:0;
            right:0;
            min-height: 100vh;
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
background-color: #1d2b00;
background-image: url("https://www.transparenttextures.com/patterns/pool-table.png");
display:none;
        }
        
        .container-sobre-o-jogo{
        display:none;
        position:fixed;
        z-index:2;
        margin:auto;
        top:0;
        bottom:0;
        left:0;
        right:0;
        padding-bottom:100px;
        overflow-y:scroll;
background-color: #000000;
background-image: url("https://www.transparenttextures.com/patterns/black-paper.png");
        }
        
        /* Scroll simples em preto e branco */
.container-sobre-o-jogo::-webkit-scrollbar {
    width: 6px;
}

.container-sobre-o-jogo::-webkit-scrollbar-thumb {
    background: white;
}

.container-sobre-o-jogo::-webkit-scrollbar-track {
    background: black;
}



        
        .sobre-o-jogo{
margin:auto; left:0;right;0;max-width: 600px; padding: 20px; color: white; font-family: 'Segoe UI', sans-serif; text-align: center; font-size: 18px; line-height: 1.6;
/* This is mostly intended for prototyping; please download the pattern and re-host for production environments. Thank you! */

        }

        .container {
            text-align: center;
            width: 90%;
            max-width: 600px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: space-between;
            min-height: 100vh; /* Garante que o container ocupe toda a altura */
        }

        .controls-container {
            position: fixed;
            top: 30px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
            z-index: 10;
        }

        .controls {
            display: flex;
            gap: 15px;
            font-size:40px;
        }

        .controls button:hover {
            filter: brightness(1.1);
        }

        .controls button.disabled {
            background-color: #ccc;
            color: #555;
            cursor: not-allowed;
            filter: brightness(1);
        }

        .dice-counter {
            display: flex;
            gap: 25px;
        }

        .counter-point {
            font-size: 60px;
            width: 50px;
            height: 50px;
            display: flex;
            justify-content: center;
            align-items: center;
            border: 2px solid #333;
            border-radius: 10px; /* Adicionado border-radius */
            background-color: #000;
            color: #fff;
            cursor: pointer;
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
            box-shadow: 0 0px 10px rgba(0, 0, 0, 1); /* Adicionado box-shadow */
        }

        .counter-point i {
            font-size: inherit; /* Herda o tamanho definido para o counter-point */
            color: inherit; /* Herda a cor definida para o counter-point */
            /* Removido box-shadow do ícone */
        }

        .dice-area {
            position: fixed;
            bottom: 50px;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 10px; /* Espaço entre o botão e os dados */
            z-index: 10;
        }

        #hideDiceBtn {
            width:50px;
            aspect-ratio:1/1;
            background-color: #fff;
            color: #000;
            border: none;
            border-radius: 50%;
            padding: 5px;
            font-size: 25px;
            cursor: pointer;
            transition: background-color 0.3s ease, filter 0.3s ease;
            box-shadow: 0 0px 10px rgba(0, 0, 0, 1);
        }

        .dice-container {
            display: flex;
            gap: 25px;
        }

        .die {
            font-size: 60px;
            width: 50px;
            height: 50px;
            display: flex;
            justify-content: center;
            align-items: center;
            border: 2px solid #333;
            border-radius: 10px; /* Adicionado border-radius */
            background-color: #000;
            color: #fff;
            cursor: pointer;
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
            box-shadow: 0 0px 10px rgba(0, 0, 0, 1); /* Adicionado box-shadow */
        }

        .die i {
            font-size: inherit; /* Herda o tamanho definido para o die */
            color: inherit; /* Herda a cor definida para o die */
            /* Removido box-shadow do ícone */
        }

        .die:hover {
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            transform: scale(1.05);
        }

        .die.hidden-value {
            color: transparent;
            background-color: #333; /* Cor de fundo para simular oculto */
            border-color: #333;
        }

        .die.rolling {
            animation: roll 0.5s linear infinite;
        }

        @keyframes roll {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(720deg); }
        }


        .fa-minus-circle{
        font-size: 40px;
        }

        .fa-dice-d6{
        font-size: 70px;
    }
    .fa-plus-circle{
    font-size: 40px;
    }

    .rollBtn{
            width:120px;
            aspect-ratio:1/1;
                background-color: #fff;
                color: #000;
                border: none;
                border-radius: 50%;
                padding: 5px;
                cursor: pointer;
                transition: background-color 0.3s ease, filter 0.3s ease;
                box-shadow: 0 0px 10px rgba(0, 0, 0, 1);
            }

    .removeBtn{
            width:80px;
            height:80px;
                background-color: #fff;
                color: #000;
                border: none;
                border-radius: 50%;
                padding: 5px;
                cursor: pointer;
                transition: background-color 0.3s ease, filter 0.3s ease;
                box-shadow: 0 0px 10px rgba(0, 0, 0, 1);
    }

    .addBtn{
            width:80px;
            height:80px;
                background-color: #fff;
                color: #000;
                border: none;
                border-radius: 50%;
                padding: 5px;
                cursor: pointer;
                transition: background-color 0.3s ease, filter 0.3s ease;
                box-shadow: 0 0px 10px rgba(0, 0, 0, 1);
    }
    button {
    -webkit-tap-highlight-color: transparent;
    outline: none;
}
button:focus {
    outline: none;
}

.startGameBtn{
padding: 20px 40px;
        font-size: 24px;
        font-family: 'Segoe UI', sans-serif;
        color: white;
        background: #080;
        border: none;
        border-radius: 15px;
        cursor: pointer;
        box-shadow: 0 0 15px rgba(0,0,0,0.6);
        transition: transform 0.2s, box-shadow 0.2s;
        font-weight:bold;
}

.comojogar{
padding: 15px;
        font-size: 18px;
        font-family: 'Segoe UI', sans-serif;
        color: white;
        background: #333;
        border: none;
        border-radius: 15px;
        cursor: pointer;
        box-shadow: 0 0 15px rgba(0,0,0,0.6);
        transition: transform 0.2s, box-shadow 0.2s;
        font-weight:bold;
}

.tela-inicial-Btn{
position:fixed;
bottom:15px;
left:15px;
width:50px;
height:50px;
padding: 10px;
        font-size: 25px;
        font-family: 'Segoe UI', sans-serif;
        color: white;
        background: #080;
        border: none;
        border-radius: 50px;
        cursor: pointer;
        box-shadow: 0 0 15px rgba(0,0,0,0.6);
        transition: transform 0.2s, box-shadow 0.2s;
        font-weight:bold;
}
    </style>
</head>
<body>
<div class="tela-inicial">
    <center><h1 style="color: white; font-family: sans-serif; margin-bottom: 20px;">Dado do Mentiroso</h1>
    <br>
    <h1>🎲🎲🎲🎲🎲</h1>
    <br>
    <button class="startGameBtn" id="startGameBtn">
        Iniciar Jogo 🎲
    </button>
    <br>
    <br>
    <button class="comojogar" id="abresobreojogo">
        Como jogar 🎲
    </button>
    </center>
    </div>
    <br>
    <div class="container-sobre-o-jogo">
    <div class="sobre-o-jogo" id="sobre-o-jogo">
    <div style="max-width: 800px; color: white; font-family: 'Segoe UI', sans-serif; padding: 20px; text-align: left;">
  <h2>📖 Sobre o Jogo</h2>
<p>A história do "Dado do Mentiroso", também conhecido como "Liar's Dice", não tem uma origem única, mas evoluiu de jogos de dados com elementos de adivinhação e blefe. Provavelmente surgiu na América Latina e se espalhou globalmente através de intercâmbios culturais e marítimos. Sua popularidade duradoura vem da combinação de sorte e estratégia psicológica, tornando-o um jogo socialmente envolvente e emocionante. Os jogadores usam dados e copos opacos para esconder seus resultados e tentam adivinhar ou enganar os outros sobre o que foi rolado.</p>

<h2>🎯 Objetivo do Jogo</h2>
<p>O objetivo principal do "Dado do Mentiroso" é <strong>ser o último jogador com dados</strong>.</p>
<p>Este jogo testa a perspicácia dos participantes, que precisam blefar sobre os resultados de seus dados combinados e questionar a veracidade das afirmações dos outros. É uma mistura de blefe estratégico, dedução e sorte.</p>

<h2>🎲 Regras</h2>
<ul>
    <li>Cada jogador começa com 5 dados.</li>
    <li>Os jogadores lançam seus dados e os escondem com um copo, mão ou outro método, de forma que os outros não vejam.</li>
    <li>Um jogador inicial é escolhido aleatoriamente.</li>
    <li>O jogador inicial (vamos supor que seja o da sua direita) faz uma aposta, dizendo, por exemplo: "Há pelo menos três dados de valor 4 na mesa".</li>
    <li>O próximo jogador (você, neste caso) pode:</li>
</ul>

<h3>1️⃣ Aumentar a Aposta</h3>
<p>Você pode aumentar a aposta anterior, mas <strong>não pode diminuir o número de dados apostados</strong> nem <strong>repetir o mesmo número de dados com o mesmo valor</strong>. Escolha uma das seguintes opções:</p>
<ul>
    <li>Aumentar o número de dados (ex: de "três dados de 4" para "quatro dados de 4").</li>
    <li>Aumentar o valor dos dados (ex: de "três dados de 4" para "três dados de 5").</li>
    <li>Aumentar ambos (ex: de "três dados de 4" para "quatro dados de 5").</li>
</ul>
<p><em>Importante:</em> A nova aposta deve ser sempre maior que a anterior em quantidade, valor ou ambos.</p>

<h3>2️⃣ Duvidar</h3>
<p>Se você acredita que o jogador anterior está blefando, diga "Duvido!". Todos revelam seus dados imediatamente.</p>
<ul>
    <li>Se o número de dados com o valor apostado for <strong>igual ou maior</strong> que o declarado, você perde um dado por duvidar.</li>
    <li>Se o número for <strong>menor</strong>, o jogador que fez a aposta perde um dado por blefar.</li>
</ul>

<h3>3️⃣ Apostar na Quantidade Exata</h3>
<p>Esta é uma jogada arriscada! Você concorda com a aposta anterior, apostando que há <strong>exatamente</strong> aquela quantidade de dados com o valor especificado.</p>
<ul>
    <li>Se você estiver <strong>certo</strong>, todos os outros jogadores perdem 1 dado.</li>
    <li>Se estiver <strong>errado</strong>, você perde 1 dado.</li>
</ul>
<p><em>Exemplo:</em> “Acho que há exatamente cinco dados de número 2 na mesa.” Se houver exatamente cinco dados de número 2, todos perdem um dado, exceto você!</p>

<h2>📱 Como jogar usando seu celular e este app</h2>
<p>Você pode jogar virtualmente no seu celular: seus dados aparecem na parte inferior da tela e os dados perdidos, na superior. Use o botão 🎲 para rolar os dados, os botões (+) e (−) para adicionar ou remover dados, e o botão 👁️ para esconder ou mostrar os valores. Cada jogador deve manter seus dados secretos no próprio celular. Para evitar que outros vejam seus dados, você pode deixar o celular na mesa e cobrir a parte inferior com a mão ou um cartão. Outra opção é segurar o celular de forma que só você veja, mas deixe o volume alto para que todos ouçam os sons dos botões, garantindo um jogo justo e transparente.</p>

<h2>Boa sorte e que vença o melhor blefador! 🎲</h2>
  <button class="tela-inicial-Btn" id="tela-inicial-Btn2" onclick="voltarTelaInicial()">
  <i class="fas fa-home"></i>
</button>
</div> 
</div>
</div> 
<div class="jogo" id="jogo">
    <div class="container">
        <div class="controls-container">
            <div class="controls">
                <button class="removeBtn" id="removeBtn">
                    <i class="fas fa-minus-circle"></i>
                </button>
                <button class="rollBtn" id="rollBtn">
                    <i class="fas fa-dice-d6"></i>
                </button>
                <button class="addBtn" id="addBtn">
                    <i class="fas fa-plus-circle"></i>
                </button>
            </div>
            <br>
            <div class="dice-counter" id="diceCounter">
            </div>
        </div>
    </div>
    <div class="container">
        <div class="dice-area">
            <div class="dice-container">
            </div>
            <br>
            <button id="hideDiceBtn">
                <i class="fas fa-eye"></i>
            </button>
        </div>
        <button class="tela-inicial-Btn" id="tela-inicial-Btn" onclick="voltarTelaInicial()">
  <i class="fas fa-home"></i>
</button>
    </div>

    <audio id="rollSound" src="https://dl.dropbox.com/scl/fi/lawmyuvtabr6nybkd4f6t/jogar-dados.mp3?rlkey=evl8egxa4w0ennfguprqngoy3&st=68x60hc3&dl=0" preload="auto"></audio>
    <audio id="removeSound" src="https://dl.dropbox.com/scl/fi/74y42ahz7m5vsh6xzuyhj/tap-notification-180637.mp3?rlkey=nzxmoqd8s0l4avnc49aiqj840&st=h9uqk0ev&dl=0" preload="auto"></audio>
    <audio id="addSound" src="https://dl.dropbox.com/scl/fi/ahl7p9asseldt95f9s408/correct-choice-43861.mp3?rlkey=3iy41q71iumgnuqca7los24zu&st=mj1v4i7j&dl=0" preload="auto"></audio>
    <audio id="pageLoadSound" src="https://dl.dropbox.com/scl/fi/ahl7p9asseldt95f9s408/correct-choice-43861.mp3?rlkey=3iy41q71iumgnuqca7los24zu&st=mj1v4i7j&dl=0" preload="auto"></audio>
    <audio id="hideSound" src="https://dl.dropbox.com/scl/fi/xvxq5dlhobkpjckzhub7z/rapid-wind-sound-effect-2-108400.mp3?rlkey=fixzfbivofazenalmkgh7dqh9&st=iewwoho9&dl=0" preload="auto"></audio>
    <audio id="somClique" src="https://dl.dropbox.com/scl/fi/xvxq5dlhobkpjckzhub7z/rapid-wind-sound-effect-2-108400.mp3?rlkey=fixzfbivofazenalmkgh7dqh9&st=iewwoho9&dl=0" preload="auto"></audio>


    <script>
        const diceContainer = document.querySelector('.dice-container');
        const rollBtn = document.getElementById('rollBtn');
        const removeBtn = document.getElementById('removeBtn');
        const addBtn = document.getElementById('addBtn');
        const hideDiceBtn = document.getElementById('hideDiceBtn');
        const diceCounterContainer = document.getElementById('diceCounter');
        const diceArea = document.querySelector('.dice-area');
        const startGameBtn = document.getElementById('startGameBtn');
		const telaInicial = document.querySelector('.tela-inicial');
		const jogoDiv = document.querySelector('.jogo');
		const containersobreojogo = document.querySelector('.container-sobre-o-jogo');
		const abresobreojogo = document.getElementById('abresobreojogo');
        const maxDice = 5;
        const minDice = 0;
        let currentDiceCount = 0; // Inicialmente 0 dados
        let diceValuesVisible = true;
        let pageLoaded = false; // Nova flag para controlar se a página carregou

        // Elementos de áudio
        const somClique = document.getElementById("somClique");
        const rollSound = document.getElementById('rollSound');
        const removeSound = document.getElementById('removeSound');
        const addSound = document.getElementById('addSound');
        const hideSound = document.getElementById('hideSound'); // Novo elemento de áudio para o botão de esconder
        const pageLoadSound = document.getElementById('pageLoadSound'); // Elemento de áudio para o carregamento

        function playSound(audioElement) {
            audioElement.currentTime = 0; // Reinicia o áudio caso já esteja tocando
            audioElement.play();
        }

        function updateButtonColors() {
            if (currentDiceCount >= maxDice) {
                addBtn.classList.add('disabled');
            } else {
                addBtn.classList.remove('disabled');
            }

            if (currentDiceCount <= minDice) {
                removeBtn.classList.add('disabled');
            } else {
                removeBtn.classList.remove('disabled');
            }
        }

        function updateDiceCounter() {
            diceCounterContainer.innerHTML = '';
            const counterValue = maxDice - currentDiceCount;
            for (let i = 0; i < counterValue; i++) {
                const point = document.createElement('div');
                point.classList.add('counter-point');
                point.innerHTML = '<i class="fas fa-dice-six"></i></i>'; // Adiciona o ícone do dado
                diceCounterContainer.appendChild(point);
            }
            updateButtonColors(); // Atualiza as cores dos botões ao alterar a contagem
        }

        function getRandomDiceFace() {
            const faces = [
                'fa-dice-one',
                'fa-dice-two',
                'fa-dice-three',
                'fa-dice-four',
                'fa-dice-five',
                'fa-dice-six'
            ];
            return faces[Math.floor(Math.random() * faces.length)];
        }

        function rollDice() {
            if (currentDiceCount > 0) {
                playSound(rollSound);
                const dice = document.querySelectorAll('.die');
                dice.forEach(die => {
                    die.classList.add('rolling');
                    setTimeout(() => {
                        die.classList.remove('rolling');
                        const icon = die.querySelector('i');
                        const newFace = getRandomDiceFace();
                        icon.className = 'fas ' + newFace;
                        updateDiceVisibility(die);
                    }, 500);
                });
            }
        }

        function updateDiceVisibility(die) {
            if (!diceValuesVisible) {
                die.classList.add('hidden-value');
            } else {
                die.classList.remove('hidden-value');
            }
        }

        function toggleDiceVisibility() {
            diceValuesVisible = !diceValuesVisible;
            const dice = document.querySelectorAll('.die');
            const eyeIcon = hideDiceBtn.querySelector('i');

            dice.forEach(updateDiceVisibility);

            if (diceValuesVisible) {
                eyeIcon.classList.remove('fa-eye-slash');
                eyeIcon.classList.add('fa-eye');
            } else {
                eyeIcon.classList.remove('fa-eye');
                eyeIcon.classList.add('fa-eye-slash');
            }
            playSound(hideSound); // Toca o som ao clicar no botão de esconder
        }

        function removeDie() {
            const dice = document.querySelectorAll('.die');
            if (dice.length > minDice) {
                playSound(removeSound);
                diceContainer.removeChild(dice[dice.length - 1]);
                currentDiceCount--;
                updateDiceCounter();
            }
        }

        function addDie() {
            if (currentDiceCount < maxDice) {
                if (pageLoaded) { // Só toca o som se a página já carregou
                    playSound(addSound);
                }
                const newDie = document.createElement('div');
                newDie.classList.add('die');
                newDie.innerHTML = '<i class="fas fa-dice-six"></i>';
                diceContainer.appendChild(newDie);
                currentDiceCount++;
                updateDiceCounter();

                // Aplica a visibilidade ao novo dado
                updateDiceVisibility(newDie);
            }
        }

        rollBtn.addEventListener('click', rollDice);
        removeBtn.addEventListener('click', removeDie);
        addBtn.addEventListener('click', addDie);
        hideDiceBtn.addEventListener('click', toggleDiceVisibility);

        // Inicializar o contador corretamente
        updateDiceCounter();

        // Inicializar os dados e definir a flag após o carregamento da página
        window.onload = function() {
            for (let i = 0; i < 5; i++) {
                addDie();
            }
            pageLoaded = true;
        };

        // Adiciona animação nos botões
        const buttons = document.querySelectorAll('.controls button'); // Seleciona todos os botões

        const keyframes = [
            { filter: 'brightness(1)' },
            { filter: 'brightness(0.2)' },
            { filter: 'brightness(1)' }
        ];

        const timing = {
            duration: 300,
            easing: 'linear'
        };

        buttons.forEach(button => {
            button.addEventListener('click', () => {
                if (!button.classList.contains('disabled')) { // Verifica se o botão não está desabilitado
                    // Cria e executa a animação diretamente via JS
                    button.animate(keyframes, timing);
                }
            });
        });

        // Atualiza a classe dos botões em caso de manipulação direta do contador
        let observer = new MutationObserver(function(mutations) {
            updateButtonColors();
        });

        observer.observe(diceCounterContainer, { childList: true, subtree: true });
        
        // Abre o jogo

startGameBtn.addEventListener('click', () => {
    telaInicial.style.display = 'none';
    jogoDiv.style.display = 'flex';
	playSound(pageLoadSound);
});

abresobreojogo.addEventListener('click', () => {

    containersobreojogo.style.display = 'block';
});





//voltar a tela inicial
function voltarTelaInicial() {
    // Oculta a div do jogo
    document.getElementById('jogo').style.display = 'none';

    // Mostra a tela inicial
    const telaInicial = document.querySelector('.tela-inicial');
    telaInicial.style.display = 'flex';
    containersobreojogo.style.display = 'none';
    telaInicial.style.justifyContent = 'center'; // Isso garante centralização horizontal
    
}

//adiciona som aos botoes de casa e sobre o jogo
function tocarSom() {
  // Garante que o som seja tocado do início toda vez
  somClique.currentTime = 0;
  somClique.play();
}

document.getElementById("abresobreojogo").addEventListener("click", tocarSom);
document.getElementById("tela-inicial-Btn").addEventListener("click", tocarSom);
document.getElementById("tela-inicial-Btn2").addEventListener("click", tocarSom);


    </script>
    
    </div>
 
</body>
</html>